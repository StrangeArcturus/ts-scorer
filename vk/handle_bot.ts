import { MessageContext } from 'vk-io/lib';
import { vk } from './bot';


const indent: string = '    ';
const hello: string = `
Итак, все команды для справки по боту:\n
/start -- для начала общения (:
/help -- для вызова помощи по командам
в любой момент можно будет посмотреть инструкцию и помошь тут, в разделе /help\n\n
Итак, команды управления данными:
!добавить -- добавляет в базу данных ваш предмет. 
Внимание, знак восклицательного знака (!) в этой и в следующих командах обязателен!
${indent}Для работы с командами с аргументами,
их нужно писать в формате "добавить <название предмета>", через пробел и жеталельно без лишних слов!
${indent}Эту, как и другие команды со знаком "!", писать желательно маленькими буквами
Внимание!!! В силу технических возможностей, названия предметов должны быть без пробелов!!!
!дописать -- дописывает оценку к уже существующему предмету, пример использования -- "!дописать матеша 4"
!очистить -- безвозвратно стирает оценки по выбранному предмету, но не удаляет его. Пример -- "!очистить инфа"
!стереть_всё -- безвозвратно стирает все ваши предметы.
Полезно перед 1 сентября, или когда начат новый семестр/триместр/четверть
!текущий_балл -- подсчитывает нынешний балл по выбранному предмету. Пример -- "!текущий_балл геометрия"
!предсказать_балл -- какой будет средний балл по выбранному предмету с учётом указанной оценки. 
Пример -- "!предсказать_балл русский 4"
!все_предметы -- выводит в сообщении все ваши предметы и оценки по ним. Пример -- "!все_предметы"\n
Если что-то не так или есть вопросы -- пишите @strange_arcturus
Заранее спасибо.`;



function handle_message(text: string) {
    let answer: string = "";
    switch (text) {
        case "start":
        case "/start":
        case "/старт":
        case "старт":
            answer = "Привет, я -- бот-дневник)\nПомощь: команды /help /помощь /хелп";
            break;
        case "help":
        case "/help":
        case "помощь":
        case "/помощь":
        case "хелп":
        case "/хелп":
        answer = hello;
        break;
        
    }
}


vk.updates.on("message_new", async (context: MessageContext): Promise<void> => {
    let text: string | undefined = context?.text;
    // await  context.send( answer )
})